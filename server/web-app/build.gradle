plugins {
    id 'org.jetbrains.kotlin.js'
}

repositories {
    maven {
        url = "https://maven.pkg.jetbrains.space/kotlin/p/kotlin/kotlin-js-wrappers"
    }
    maven {
        url = "https://maven.pkg.jetbrains.space/public/p/kotlinx-html/maven"
    }
}

kotlin {
    js {
        browser()
    }
}

dependencies {
    implementation project(":server:api-client")


    implementation "org.jetbrains:kotlin-react:17.0.0-pre.129-kotlin-1.4.10"
    implementation "org.jetbrains.kotlinx:kotlinx-html-js:0.7.2"
    implementation "org.jetbrains:kotlin-styled:5.2.0-pre.129-kotlin-1.4.10"
    implementation(npm("react", "16.13.1"))
    implementation(npm("react-dom", "16.13.1"))
}

configurations {
    productionWebjar {
        canBeResolved = true
        canBeConsumed = true
    }
    developmentWebjar {
        canBeResolved = true
        canBeConsumed = true
    }
}

browserProductionWebpack.configure {
    destinationDirectory = file("${buildDir}/distributions/prod/")
}

browserDevelopmentWebpack.configure {
    destinationDirectory = file("${buildDir}/distributions/dev/")
}

dependencies {
    productionWebjar browserProductionWebpack.outputs.files
    developmentWebjar browserDevelopmentWebpack.outputs.files
}

task productionWebjarJar(type : Jar) {
    group "build"
    archiveName "productionWebjar.jar"

    from configurations.productionWebjar {
        into "META-INF/resources/webjars/web-app/1.0.0/"
        includeEmptyDirs = false
        exclude "**/META-INF/*"
    }
}

task developmentWebjarJar(type : Jar) {
    group "build"
    archiveName "developmentWebjar.jar"

    from configurations.developmentWebjar {
        into "META-INF/resources/webjars/web-app/1.0.0"
        includeEmptyDirs = false
        exclude "**/META-INF/*"
    }
}

artifacts {
    productionWebjar productionWebjarJar
    developmentWebjar developmentWebjarJar
}